#include <allegro5\allegro.h>
#include <allegro5\allegro_native_dialog.h>
#include <allegro5\allegro_primitives.h>


#define ScreenWidth 800
#define ScreenHight 600

int main()
{
    ALLEGRO_DISPLAY *display;

    const float FPS = 60.0;

    enum Direction { UP, DOWN, LEFT, RIGHT};



    if(!al_init())
    {
        al_show_native_message_box(NULL, NULL, NULL,
                                    "failed to initialize allegro!", NULL, NULL);
        return -1;
    }

    al_set_new_display_flags(ALLEGRO_FULLSCREEN);
    display = al_create_display( ScreenWidth , ScreenHight );


    if(!display)
    {
        al_show_native_message_box(display, NULL, NULL, 
                                   "failed to initialize display!", NULL, NULL);
        return -1;
    }

    al_set_window_position(display, 200 , 200);

    bool done = false, draw = true;
    int x = 20, y = 20, moveSpeed = 5;
    int dir = DOWN;

    al_init_primitives_addon();
    al_install_keyboard();

    ALLEGRO_KEYBOARD_STATE keyState;

    ALLEGRO_TIMER *timer = al_create_timer(1.0/ FPS);
    
    ALLEGRO_EVENT_QUEUE *event_queue =al_create_event_queue();
    
    al_register_event_source(event_queue, al_get_keyboard_event_source());
    al_register_event_source(event_queue, al_get_timer_event_source(timer));

    al_start_timer(timer);


    while(!done)
    {

        ALLEGRO_EVENT events;
        al_wait_for_event(event_queue, &events);

        if(events.type == ALLEGRO_EVENT_KEY_UP)
        {
            switch(events.keyboard.keycode)
            {
                case ALLEGRO_KEY_ESCAPE:
                done = true;
            }
        }
        
        if(events.type == ALLEGRO_EVENT_TIMER)
        {
            al_get_keyboard_state(&keyState);
            
            if(al_key_down(&keyState, ALLEGRO_KEY_DOWN))
                    y+= moveSpeed;
                else if(al_key_down(&keyState, ALLEGRO_KEY_UP))
                    y-= moveSpeed;
                else if(al_key_down(&keyState, ALLEGRO_KEY_RIGHT))
                    x+= moveSpeed;
                else if(al_key_down(&keyState, ALLEGRO_KEY_LEFT))
                    x-= moveSpeed;

            draw = true;
        }

        if(draw)
        {
            al_draw_filled_rectangle(x, y, x+10, y+10, al_map_rgb(130,0,0));
            al_flip_display();
            al_clear_to_color(al_map_rgb(0,0,0));
        }

    }

    al_destroy_display(display);
    al_destroy_event_queue(event_queue);
    al_destroy_timer(timer);


    return 0;
}
